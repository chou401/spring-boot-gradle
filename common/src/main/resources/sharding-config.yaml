# 不配置则默认单机模式
#mode:
#    # 运行模式类型。可选配置：Standalone、Cluster
#    type: Standalone
#    # 持久化仓库配置
#    repository:
#        # 持久化仓库类型
#        type: JDBC
# 数据源配置，可配置多个
dataSources:
    # 数据源名称
    master_0:
        # 数据源完整类名
        dataSourceClassName: com.zaxxer.hikari.HikariDataSource
        # 数据库驱动类名，以数据库连接池自身配置为准
        driverClassName: com.mysql.cj.jdbc.Driver
        # 数据库 URL 连接，以数据库连接池自身配置为准
        jdbcUrl: jdbc:mysql://localhost:3306/boot?allowPublicKeyRetrieval=True&serverTimezone=GMT%2B8&characterEncoding=utf-8&useSSL=false
        # 数据库用户名，以数据库连接池自身配置为准
        username: root
        # 数据库密码，以数据库连接池自身配置为准
        password: 3306
    slave_1:
        dataSourceClassName: com.zaxxer.hikari.HikariDataSource
        driverClassName: com.mysql.cj.jdbc.Driver
        jdbcUrl: jdbc:mysql://localhost:3307/boot?allowPublicKeyRetrieval=True&serverTimezone=GMT%2B8&characterEncoding=utf-8&useSSL=false
        username: root
        password: 3307
    slave_2:
        dataSourceClassName: com.zaxxer.hikari.HikariDataSource
        driverClassName: com.mysql.cj.jdbc.Driver
        jdbcUrl: jdbc:mysql://localhost:3308/boot?allowPublicKeyRetrieval=True&serverTimezone=GMT%2B8&characterEncoding=utf-8&useSSL=false
        username: root
        password: 3308

rules:
- !READWRITE_SPLITTING
    dataSources:
        # 读写分离逻辑数据源名称
        ds_0:
            # 写库数据源名称
            writeDataSourceName: master_0
            # 读库数据源名称
            readDataSourceNames:
                - slave_1
                - slave_2
            # 事务内读请求的路由策略，可选值：PRIMARY（路由至主库）、FIXED（同一事务内路由至固定数据源）、DYNAMIC（同一事务内路由至非固定数据源）。默认值：DYNAMIC
            transactionalReadQueryStrategy: PRIMARY
            # 负载均衡算法名称
            loadBalancerName: random
    # 负载均衡算法配置
    loadBalancers:
        # 负载均衡算法名称
        random:
            # 负载均衡算法类型
            type: RANDOM
- !SHARDING
    # 数据分片规则配置
    tables:
        # 逻辑表名称
        sys_user:
            # 由数据源名 + 表名组成
            actualDataNodes: ds_0.sys_user_${0..1}
            # 分表策略
            tableStrategy:
                standard:
                    # 分片列名称
                    shardingColumn: id
                    # 分片算法名称
                    shardingAlgorithmName: sys_user_inline
            # 分库策略
#            databaseStrategy:
#                standard:
#                    shardingColumn: id
#                    shardingAlgorithmName: database_inline
            # 分布式序列策略
            keyGenerateStrategy:
                # 自增列名称，缺省表示不使用自增主键生成器
                column: id
                # 分布式序列算法名称
                keyGeneratorName: snowflake
    # 分片算法配置
    shardingAlgorithms:
#        database_inline:
#            type: INLINE
#            props:
#                algorithm-expression: ds_${id % 2}
        # 分片算法名称
        sys_user_inline:
            # 分片算法类型
            type: INLINE
            # 分片算法属性配置
            props:
                algorithm-expression: sys_user_${id % 2}
    # 分布式序列算法配置
    keyGenerators:
        # 分布式序列算法名称
        snowflake:
            # 分布式序列算法类型
            type: SNOWFLAKE
# 单表规则
- !SINGLE
    tables:
        - "*.*"
# 真实 sql 日志
props:
    sql-show: true


